name: CI/CD

on:
  push:
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.4
      - name: Install dependencies
        run: poetry install
      - name: Pytest
        run: |
          poetry run coverage run --branch -m --source=./ pytest tests
          poetry run coverage report -m

  publish:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.4
      - name: Build and publish
        env:
          PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN_PYPI }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN_PYPI
          poetry publish -n --build --dry-run

# inspired by https://www.marwandebbiche.com/posts/python-package-tooling/
